{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/componentes/busca-filme/busca-filme.component.ts","./src/app/componentes/busca-filme/busca-filme.component.html","./src/app/componentes/conta/conta.component.ts","./src/app/componentes/conta/conta.component.html","./src/app/componentes/detalhes-perfil/detalhes-perfil.component.ts","./src/app/componentes/detalhes-perfil/detalhes-perfil.component.html","./src/app/componentes/filme/filme.component.ts","./src/app/componentes/filme/filme.component.html","./src/app/componentes/lista-contas/lista-contas.component.ts","./src/app/componentes/lista-contas/lista-contas.component.html","./src/app/componentes/lista-filmes/lista-filmes.component.ts","./src/app/componentes/lista-filmes/lista-filmes.component.html","./src/app/componentes/login/login.component.ts","./src/app/componentes/login/login.component.html","./src/app/componentes/master-perfil/master-perfil.component.ts","./src/app/componentes/master-perfil/master-perfil.component.html","./src/app/componentes/perfis/perfis.component.ts","./src/app/componentes/perfis/perfis.component.html","./src/app/mock-data/mock-contas.ts","./src/app/mock-data/mock-filmes.ts","./src/app/mock-data/mock-masterPerfilA.ts","./src/app/services/api-config.service.ts","./src/app/services/conta.service.ts","./src/app/services/filmes.service.ts","./src/app/services/login.service.ts","./src/app/services/master-perfil.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Router, RouterModule, Routes } from '@angular/router';\n//Componentes necessarios\nimport { ContaComponent } from './componentes/conta/conta.component';\nimport { DetalhesPerfilComponent } from './componentes/detalhes-perfil/detalhes-perfil.component';\nimport { LoginComponent } from './componentes/login/login.component';\nimport { ListaContasComponent } from './componentes/lista-contas/lista-contas.component';\nimport { BuscaFilmeComponent } from './componentes/busca-filme/busca-filme.component'\n\nconst routes: Routes = [\n\t{ path: '', redirectTo: '/login', pathMatch: 'full' },\n\t{ path: 'conta', component: ContaComponent },\n\t{ path: 'login', component: LoginComponent },\n\t{ path: 'conta/perfil/:idPerfil', component: DetalhesPerfilComponent },\n\t{ path: 'allcontas', component: ListaContasComponent },\n\t{ path: 'busca', component: BuscaFilmeComponent },\n\t{ path: '**', redirectTo: '/login' }\n];\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n\tconstructor(private router: Router){}\n\n\tRedirectConta(id: number){\n\t\tif (id === 99)\n\t\t\tthis.router.navigate(['allcontas']);\n\t\telse if (id !== -1){\n\t\t\tthis.router.navigate(['conta/{{id}}']);\n\t\t}\n\t}\n }","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Fetnlix';\n}\n","<h1> {{title}} </h1>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { ContaComponent } from './componentes/conta/conta.component';\nimport { PerfisComponent } from './componentes/perfis/perfis.component';\nimport { MasterPerfilComponent } from './componentes/master-perfil/master-perfil.component';\nimport { FilmeComponent } from './componentes/filme/filme.component';\nimport { DetalhesPerfilComponent } from './componentes/detalhes-perfil/detalhes-perfil.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { ListaFilmesComponent } from './componentes/lista-filmes/lista-filmes.component';\nimport { LoginComponent } from './componentes/login/login.component';\nimport { ListaContasComponent } from './componentes/lista-contas/lista-contas.component';\nimport { BuscaFilmeComponent } from './componentes/busca-filme/busca-filme.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ContaComponent,\n    PerfisComponent,\n    MasterPerfilComponent,\n    FilmeComponent,\n    DetalhesPerfilComponent,\n    ListaFilmesComponent,\n    LoginComponent,\n    ListaContasComponent,\n    BuscaFilmeComponent\n  ],\n  imports: [\n\t\tHttpClientModule,\n\t\tBrowserModule,\n\t\tFormsModule,\n\t\tAppRoutingModule \n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n//Componentes necessarios\nimport { Filme } from '../../base-data-types/filme';\n//Componentes de servico\nimport { FilmesService } from '../../services/filmes.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-busca-filme',\n  templateUrl: './busca-filme.component.html',\n  styleUrls: ['./busca-filme.component.css']\n})\nexport class BuscaFilmeComponent implements OnInit {\n\tdisplayedColumnsFilmes: string[] = ['id'];\n\tnomeFilme: string;\n\tfilmes: Filme[];\n\n  constructor( \n\t\tprivate filmesService: FilmesService,\n\t\tprivate router: Router\n\t\t) { }\n\n  ngOnInit(): void {\n\t\tthis.filmes = [];\n\t}\n\n\tgetFilmes(): void{\n\t\t//this.filmesService.getFilmeApi(this.nomeFilme).subscribe(filmes => this.filmes = filmes);\n\t}\n\n\tasync buscarFilmeNome() {\n\t\tif(this.nomeFilme === ''){\n\t\t\tthis.filmes = [];\n\t\t} else {\n\t\t\tawait this.filmesService.getFilmesNomeApi(this.nomeFilme)\n\t\t\t.then( async filmesRetornados => {\n\t\t\t\t\tthis.filmes = filmesRetornados;\n\t\t\t\t\tconsole.log('Lista retornada da filmeService (BUSCA-FILME): ');\n\t\t\t\t\tconsole.log(filmesRetornados);\n\t\t\t\t}\n\t\t\t);\n\t\t\t//console.log('Lista usada(BUSCA-FILME): ');\n\t\t\t//console.log(this.filmes);\n\t\t}\n\t}\n\n\tgoConta(){\n\t\tthis.router.navigate(['conta']);\n\t}\n\n\taddWatchLater(){\n\t\t//TODO\n\t}\n\n}\n","<div>\n\t<div>\n\t\t<button (click)=\"goConta()\">Minha conta</button>\n\t</div>\n\t<div class=\"buscFilmes\">\n\t\t<input [(ngModel)]=\"nomeFilme\" type=\"text\" placeholder=\"Digite o nome do filme\"/>\n\t\t<div>\n\t\t<span>A busca é feita usando o banco de dados da </span> <a href=\"https://www.themoviedb.org/\">TMDb</a>\n\t\t</div>\n\t</div>\n\t<div>\n\t\t<button (click)=\"buscarFilmeNome()\">Buscar</button>\n\t</div>\n\n</div>\n\n<div *ngIf=\"filmes.length > 0\">\n\t<h1>Filmes encontrados</h1>\n\t<ul class=\"filmes\">\n\t\t<li *ngFor=\"let filme of filmes\">\n\t\t\t<app-filme [filme]=\"filme\"></app-filme>\n\t\t\t<button (click)=\"addWatchLater()\">Adicionar a lista</button>\n\t\t</li>\n\t</ul>\n</div>","import { Component, OnInit, Input } from '@angular/core';\n//Componentes necessarios\nimport { Conta } from '../../base-data-types/conta';\nimport { Perfil } from '../../base-data-types/perfil-dt/perfil';\nimport { MasterPerfil } from '../../base-data-types/perfil-dt/master-perfil'\n//Componentes de serviço\nimport { ContaService } from '../../services/conta.service'\n//Componentes de rota\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\n\n\n\n@Component({\n  selector: 'app-conta',\n  templateUrl: './conta.component.html',\n  styleUrls: ['./conta.component.css']\n})\nexport class ContaComponent implements OnInit {\n\t@Input() conta: Conta;\n\tcurrMaster: MasterPerfil;\n\tcurrPerfis: Perfil[];\n\t\n  constructor(\n\t\tprivate contaService: ContaService,\n\t\tprivate route: ActivatedRoute,\n\t\tprivate location: Location\n\t) {}\n\n  ngOnInit(): void {\n\t\tthis.getConta();\n\t}\n\n\tgetConta(): void{\n\t\tthis.contaService.getContaAtiva().subscribe(conta => this.conta = conta);\n\t\t\n\t\tif (this.conta !== undefined){\n\t\t\tthis.currMaster = this.conta.masterPerfil;\n\t\t\tthis.currPerfis = this.conta.perfis;\n\t\t}\n\t}\n\n\tgetMasterPerfil(id: number): MasterPerfil{\n\t\treturn this.conta.masterPerfil;\n\t}\n\n\tdeslogar(){\n\t\tthis.contaService.deslogar();\n\t}\n\n}\n","<div *ngIf=\"conta\">\n\t<h2>Dados da Conta</h2>\n\t<button routerLink=\"/busca\">Buscar filmes</button>\n\t<div>\n\t\t<app-master-perfil [masterPerfil]=\"currMaster\"></app-master-perfil>\n\t</div>\n\n\t<div>\n\t\t<app-perfis [perfis]=\"currPerfis\" [conta]=\"conta\"></app-perfis>\n\t</div>\n\n\t<button (click)=\"deslogar()\">deslogar</button>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\n//Componentes necessarios\nimport { Perfil } from '../../base-data-types/perfil-dt/perfil';\nimport { Filme } from '../../base-data-types/filme';\n//Componentes de serviço\nimport { ContaService } from '../../services/conta.service';\n//Componentes de rota\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { Conta } from '../../base-data-types/conta';\nimport { FilmesService } from '../../services/filmes.service';\n\n\n@Component({\n  selector: 'app-detalhes-perfil',\n  templateUrl: './detalhes-perfil.component.html',\n  styleUrls: ['./detalhes-perfil.component.css']\n})\nexport class DetalhesPerfilComponent implements OnInit {\n\t@Input() perfil: Perfil;\n\t@Input() conta: Conta;\n\tfilmes: Filme[];\n\n  constructor(\n\t\tprivate filmesService: FilmesService,\n\t\tprivate contaService: ContaService,\n\t\tprivate route: ActivatedRoute,\n\t\tprivate location: Location\n\t) { }\n\n  ngOnInit(): void {\n\t\tif (this.perfil === undefined)\n\t\t\tthis.getPerfil();\n\t}\n\t\n\tgetPerfil(): void {\n\t\tthis.contaService.getContaAtiva().subscribe(conta => this.conta = conta);\n\t\tconst idPerfil = +this.route.snapshot.paramMap.get('idPerfil');\n\t\tthis.perfil = this.conta.perfis[idPerfil];\n\t\tthis.getFilmeByIds(this.perfil.lsFilmesAssistir);\n\t}\n\n\t//GETS\n\tgetFilmeByIds(idFilmes: number[]): void {\n\t\tconst numeroIds = idFilmes.length;\n\t\tif ( \n\t\t\t(idFilmes === undefined ) ||\n\t\t\t(numeroIds == 0)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\t\tthis.filmes = [];\n\t\tfor (let index = 0; index < numeroIds; index++){\n\t\t\tthis.filmesService.getFilme(idFilmes[index])\n\t\t\t\t.subscribe(filme => this.filmes[index] = filme);\n\t\t}\n\t}\n\n\tgoBack(): void {\n\t\tthis.location.back();\n\t}\n\n}\n","<div *ngIf=\"perfil\">\n\n\t<h2>Detalhes de {{perfil.nome | uppercase}}</h2>\n\t<div>\n\t\t<label>\n\t\t\t<input [(ngModel)]=\"perfil.nome\" placeholder=\"Nome\"/>\n\t\t</label>\n\t</div>\n\t\n\t<button (click)=\"goBack()\">Voltar</button>\n\t<!--TODO: CHAMAR O LISTA FILMES -->\n\t<app-lista-filmes [filmes]=\"filmes\"></app-lista-filmes>\n\n</div>","import { Component, OnInit, Input } from '@angular/core';\n//Componentes necessarios\nimport { Filme } from '../../base-data-types/filme';\n//Componentes de serviço\nimport { FilmesService } from '../../services/filmes.service';\n\n@Component({\n  selector: 'app-filme',\n  templateUrl: './filme.component.html',\n  styleUrls: ['./filme.component.css']\n})\nexport class FilmeComponent implements OnInit {\n\t@Input() filme: Filme;\n\n  constructor(private filmesService: FilmesService) { }\n\n\tngOnInit(): void {\n\t}\n\t\n}\n","<div *ngIf=\"filme\">\n\t<div>ID:\n\t\t{{filme.id}}\n\t</div>\n\t<div>Nome:\n\t\t{{filme.original_title}}\n\t</div>\n\t<div>Descrição:\n\t\t{{filme.overview}}\n\t</div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\n//Componentes necessarios\nimport { Conta } from '../../base-data-types/conta';\n//Componentes de serviço\nimport { ContaService } from '../../services/conta.service';\n\n\n@Component({\n  selector: 'app-lista-contas',\n  templateUrl: './lista-contas.component.html',\n  styleUrls: ['./lista-contas.component.css']\n})\nexport class ListaContasComponent implements OnInit {\n\t contas: Conta[];\n\n  constructor(private contaService: ContaService) { }\n\n  ngOnInit(): void {\n\t\tthis.getContas();\n\t}\n\n\tgetConta(id: number): void{\n\t\tthis.contaService.getConta(id);\n\t}\n\n\tgetContas(): void{\n\t\tthis.contaService.getContas()\n\t\t.subscribe(contas => this.contas = contas);\n\t\tconsole.log(this.contas);\n\t}\n\n}\n","<div *ngIf=\"contas\">\n\n\t<h2>Lista de Contas</h2>\n\t<ul class=\"contas\">\n\t\t<li *ngFor=\"let conta of contas\">\n\t\t\t<div><span>id: </span>\n\t\t\t\t<a routerLink=\"/conta/{{conta.id}}\">{{conta.masterPerfil.perfilBase.nome}}</a>\n\t\t\t</div>\n\t\t</li>\n\t</ul>\n</div>","import { Component, OnInit, Input, ChangeDetectionStrategy } from '@angular/core';\n//Componentes necessarios\nimport { Filme } from '../../base-data-types/filme';\n//Componentes de serviço\nimport { FilmesService } from '../../services/filmes.service';\n\n\n@Component({\n\tchangeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'app-lista-filmes',\n  templateUrl: './lista-filmes.component.html',\n  styleUrls: ['./lista-filmes.component.css']\n})\nexport class ListaFilmesComponent implements OnInit {\n\t@Input() filmes: Filme[];\n\n  constructor(private filmesService: FilmesService) { }\n\n  ngOnInit(): void {\n\t}\n\t\n\tgetFilmes(): void{\n\t\tthis.filmesService.getFilmes().subscribe(filmes => this.filmes = filmes);\n\t\tconsole.log('Dentro lista filmes');\n\t\tconsole.log(this.filmes);\n\t}\n\n\tgetFilme(id: number): void{\n\t\tthis.filmesService.getFilme(id);\n\t}\n\n}\n","<div *ngIf=\"filmes\">\n\t<h1>Lista de filmes</h1>\n\t<ul class=\"filmes\">\n\t\t<li *ngFor=\"let filme of filmes\">\n\t\t\t<app-filme [filme]=\"filme\"></app-filme>\n\t\t</li>\n\t</ul>\n</div>","import { Component, OnInit, Input } from '@angular/core';\n//Componentes necessarios\nimport { Conta } from '../../base-data-types/conta';\n//Componentes de serviço\nimport { LoginService } from '../../services/login.service';\nimport { ContaService } from '../../services/conta.service';\n//Componentes de roteamento\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\tconta: Conta;\n\temailTxt: string = 'AA@A';\n\tsenhaTxt: string = 'AA';\n\n  constructor(\n\t\tprivate loginService: LoginService,\n\t\tprivate contaService: ContaService,\n\t\tprivate router: Router\n\t) { }\n\n  ngOnInit(): void {\n\t}\n\t\n\tlogar(): void {\n\t\tthis.loginService.logar(this.emailTxt, this.senhaTxt);\n\t}\n\n\tregistrar(): void {\n\t\tthis.contaService.create(this.emailTxt, this.senhaTxt);\n\t\tthis.router.navigate(['/conta/']);\n\t}\n\n}\n","<div>\n\t<div>\n\t\t<input [(ngModel)]=\"emailTxt\" type=\"email\" placeholder=\"email\"/>\n\t</div>\n\t<div>\n\t\t<input [(ngModel)]=\"senhaTxt\" type=\"text\" placeholder=\"senha\"/>\n\t</div>\n\t<div>\n\t\t<button (click)=\"logar()\"><span>Logar</span></button>\n\t\t<button (click)=\"registrar()\"><span>Registrar</span></button>\n\t</div>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\n//Componentes necessarios\nimport { Filme } from '../../base-data-types/filme';\nimport { Perfil } from '../../base-data-types/perfil-dt/perfil';\nimport { MasterPerfil } from '../../base-data-types/perfil-dt/master-perfil';\n//Componentes de serviço\nimport { MasterPerfilService } from '../../services/master-perfil.service';\nimport { FilmesService } from 'src/app/services/filmes.service';\n\n\n\n@Component({\n  selector: 'app-master-perfil',\n  templateUrl: './master-perfil.component.html',\n  styleUrls: ['./master-perfil.component.css']\n})\nexport class MasterPerfilComponent implements OnInit {\n\t@Input() masterPerfil: MasterPerfil;\n\tperfilB: Perfil;\n\tfilmes: Filme[];\n\n  constructor(\n\t\tprivate masterService: MasterPerfilService,\n\t\tprivate filmesService: FilmesService\n\t\t) {}\n\n  ngOnInit(): void {\n\t\tthis.getPerfil();\n\t}\n\t\n\tgetPerfil(): void{\n\t\tthis.perfilB = this.masterPerfil.perfilBase;\n\t\tthis.getFilmeByIds(this.perfilB.lsFilmesAssistir);\n\t}\n\n\t//Codigo original de lista-filmes.component.ts\n\t//Ao finalizar a implementação dos perfis remover essa função poi ela será redundante\n\tgetFilmeByIds(idFilmes: number[]): void {\n\t\tconst numeroIds = idFilmes.length;\n\t\tif ( \n\t\t\t(idFilmes === undefined ) ||\n\t\t\t(numeroIds == 0)\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\t\tthis.filmes = [];\n\t\tfor (let index = 0; index < numeroIds; index++){\n\t\t\tthis.filmesService.getFilme(idFilmes[index])\n\t\t\t\t.subscribe(filme => this.filmes[index] = filme);\n\t\t}\n\t}\n\n\tsave(): void {\n\t\t//TODO\n\t}\n\n}\n","<div *ngIf=\"masterPerfil\">\n\t<h3>Detalhes da conta de {{this.masterPerfil.perfilBase.nome}}</h3>\n\t<div>\n\t\t<labe>email:\n\t\t\t<input [(ngModel)]=\"this.masterPerfil.email\" placeholder=\"email\"/>\n\t\t</labe>\n\t</div>\n\t<div>\n\t\t<labe>senha:\n\t\t\t<input [(ngModel)]=\"this.masterPerfil.senha\" placeholder=\"senha\"/>\n\t\t</labe>\n\t</div>\n\t<div>\n\t\t<labe>dtNascimento:\n\t\t\t<input [(ngModel)]=\"this.masterPerfil.dtNascimento\" placeholder=\"dtNascimento\"/>\n\t\t</labe>\n\t</div>\n\t<button (click)=\"save()\">Salvar</button>\n</div>\n<div>\n\t<app-lista-filmes [filmes]=\"filmes\"></app-lista-filmes>\n</div>\n<div>\n\t<app-detalhes-perfil [perfil]=\"perfilB\"></app-detalhes-perfil>\n</div>\n","import { Component, OnInit, Input } from '@angular/core';\n//Componentes necessarios\nimport { Perfil } from '../../base-data-types/perfil-dt/perfil';\nimport { Conta } from '../../base-data-types/conta';\n\n\n@Component({\n  selector: 'app-perfis',\n  templateUrl: './perfis.component.html',\n  styleUrls: ['./perfis.component.css']\n})\nexport class PerfisComponent implements OnInit {\n\t@Input() perfis: Perfil[];\n\t@Input() conta: Conta;\n\n  constructor() { }\n\n  ngOnInit(): void {}\n\n}\n","<h2>Perfis</h2>\n<ul class=\"perfis\">\n\t<li *ngFor=\"let perfil of perfis\">\n\t\t<div><span>Nome: </span>\n\t\t\t<a routerLink=\"/conta/perfil/{{perfil.id}}\">{{perfil.nome}}</a>\n\t\t</div>\n\t</li>\n</ul>\n","import { Conta } from '../base-data-types/conta';\r\nimport { MASTERA } from './mock-masterPerfilA'\r\n\r\nexport const MOCKCONTA: Conta[] = [\r\n\t{ \r\n\t\testaAutenticado: false,\r\n\t\tid: 0, \r\n\t\tmasterPerfil: MASTERA[0], \r\n\t\tperfis: [\r\n\t\t\t{ \r\n\t\t\t\tid: 0,\r\n\t\t\t\tnome: 'Armando',\r\n\t\t\t\tlsFilmesAssistir: [0, 1, 2]\r\n\t\t\t},\r\n\t\t\t{ \r\n\t\t\t\tid: 1,\r\n\t\t\t\tnome: 'Ariel',\r\n\t\t\t\tlsFilmesAssistir: [0, 3]\r\n\t\t\t},\r\n\t\t\t{ \r\n\t\t\t\tid: 2,\r\n\t\t\t\tnome: 'Arthur',\r\n\t\t\t\tlsFilmesAssistir: [2]\r\n\t\t\t}\r\n\t\t]\r\n\t},\r\n\t{ \r\n\t\testaAutenticado: false,\r\n\t\tid: 1, \r\n\t\tmasterPerfil: MASTERA[1],\r\n\t\tperfis: [\r\n\t\t\t{ \r\n\t\t\t\tid: 0,\r\n\t\t\t\tnome: 'Bruno',\r\n\t\t\t\tlsFilmesAssistir: [0, 1, 2, 3]\r\n\t\t\t},\r\n\t\t\t{ \r\n\t\t\t\tid: 1,\r\n\t\t\t\tnome: 'Bianca',\r\n\t\t\t\tlsFilmesAssistir: []\r\n\t\t\t}\r\n\t\t]\r\n\t}\r\n];\r\n\r\n","import { Filme } from '../base-data-types/filme'\r\n\r\nexport const FILMES: Filme[] = [\r\n\t{ id: 0, original_title: 'filme bom', overview: 'Um filme muito bem feito.' },\r\n\t{ id: 1, original_title: 'filme ruim', overview: 'Quase o live action de a lenda de Aang...' },\r\n\t{ id: 2, original_title: 'filme comédia', overview: 'Expire forte pelo nariz!' },\r\n\t{ id: 3, original_title: 'filme terror', overview: 'De alguma forma não tem jumpscares(que?)' }\r\n]\r\n","import { MasterPerfil } from '../base-data-types/perfil-dt/master-perfil';\r\n\r\nexport const MASTERA: MasterPerfil[] = [\r\n\t{\r\n\t\tid: 0,\r\n\t\temail: 'AA@A',\r\n\t\tsenha: 'AA',\r\n\t\tdtNascimento: 'AA/AA/AA',\r\n\t\tperfilBase: { id: 0, nome: 'Alpha', lsFilmesAssistir: [4, 2, 3, 1] },\r\n\t\tidConta: 0\r\n\t},\r\n\t{\r\n\t\tid: 1,\r\n\t\temail: 'BB@B',\r\n\t\tsenha: 'BB',\r\n\t\tdtNascimento: 'BB/BB/BB',\r\n\t\tperfilBase: { id: 1, nome: 'Beta', lsFilmesAssistir: [2, 1, 0, 3]},\r\n\t\tidConta: 1\r\n\t}\r\n];\r\n","import { Injectable } from '@angular/core';\nimport { RespostaTmdb } from '../base-data-types/resposta-apis/resposta-tmdb';\n//Componentes de acesso a apis\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Filme } from '../base-data-types/filme';\n\nexport const api_key = '08453d167017d4e4b74c8fd4d25b5e8c';\nexport const base_url = 'https://api.themoviedb.org/3/';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ApiConfigService {\n\tserverResponse: string = 'vazia';\n\n\tconstructor(private http: HttpClient) { }\n\n\tasync searchById(id: number): Promise<Filme>{\n\t\tif (id === undefined)\n\t\t\treturn;\n\t\tconst url = `${base_url}search/movie${id}?api_key=${api_key}&language=pt-BR`;\n\t\treturn this.http.get<Filme>(url).toPromise();\n\t}\n\t\n\tasync searchByName(nome: string): Promise<RespostaTmdb>{\n\t\tif (nome === undefined)\n\t\t\treturn;\n\t\tconst url = `${base_url}search/movie?api_key=${api_key}&language=pt-BR&query=${this.formatarString(nome)}&page=1`;\n\t\treturn this.http.get<RespostaTmdb>(url).toPromise();\n\t}\n\n\tformatarString(original: string): string{\n\t\treturn original.replace(' ', '%20');\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n//Componentes necessarios\nimport { Conta } from '../base-data-types/conta'\nimport { MasterPerfil } from '../base-data-types/perfil-dt/master-perfil'\nimport { Perfil } from '../base-data-types/perfil-dt/perfil'\n//Componentes do banco de dados\nimport { MOCKCONTA } from '../mock-data/mock-contas'\n//Componentes de serviço\nimport { MasterPerfilService } from './master-perfil.service';\nimport { Router } from '@angular/router';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContaService {\n\tstatic CONTA: Conta[] = MOCKCONTA;\n\tcurrId: number = 2;\n\tprivate static contaAtiva: number;\n\n\tconstructor(\n\t\tprivate masterService: MasterPerfilService,\n\t\tprivate router: Router\n\t) {\n\t\tContaService.contaAtiva = -1;\n\t}\n\n\tpublic deslogar(){\n\t\tContaService.contaAtiva = -1;\n\t\t//alert('Deslogado');\n\t\tthis.router.navigate(['']);\n\t}\n\n\tpublic ativarConta(id: number): void {\n\t\tContaService.contaAtiva = id;\n\t}\n\n\tpublic getContaAtiva(): Observable<Conta> {\n\t\tif (ContaService.contaAtiva !== -1){\n\t\t\tconsole.log('CONTAS');\n\t\t\tconsole.log(ContaService.CONTA);\n\t\t\treturn this.getConta(ContaService.contaAtiva);\n\t\t}\n\t\talert('Faca login para continuar');\n\t\tthis.router.navigate(['login']);\n\t}\n\t\n\tgetContas(): Observable<Conta[]>{\n\t\treturn of(ContaService.CONTA);\n\t}\n\n\t//GETS\n\tgetConta(id: number): Observable<Conta>{\n\t\treturn of(ContaService.CONTA.find(conta => conta.id === id));\n\t}\n\n\tgetContaByEmail(email: string): Conta{\n\t\treturn ContaService.CONTA.find(conta => conta.masterPerfil.email === email);\n\t}\n\n\tgetMasterPerfil(id: number): Observable<MasterPerfil>{\n\t\treturn of(ContaService.CONTA.find(conta => conta.id === id).masterPerfil);\n\t}\n\n\tgetPerfisBase(id: number): Observable<Perfil[]>{\n\t\treturn of(ContaService.CONTA.find(conta => conta.id === id).perfis);\n\t}\n\n\t//ADDS\n\tcreate(email: string, senha: string): Boolean{\n\t\tif (this.getContaByEmail(email) === undefined) {\n\t\t\tconst novaConta: Conta = { \n\t\t\t\testaAutenticado: true,\n\t\t\t\tid: this.currId, \n\t\t\t\tmasterPerfil: undefined,\n\t\t\t\tperfis: []\n\t\t\t}\n\t\t\t\n\t\t\tContaService.CONTA.push( novaConta );\n\t\t\tContaService.CONTA[this.currId].masterPerfil = this.masterService.create(email, senha, this.currId);\n\t\t\tthis.ativarConta(this.currId);\n\t\t\tthis.getConta(this.currId);\n\n\t\t\tthis.currId++;\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\t\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n//Componentes necessarios\nimport { Filme } from '../base-data-types/filme'\n//Componentes de acesso a apis\nimport { RespostaTmdb } from '../base-data-types/resposta-apis/resposta-tmdb';\nimport { ApiConfigService  } from './api-config.service';\n//Mock database\nimport { FILMES } from '../mock-data/mock-filmes'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FilmesService {\n\tresponse: RespostaTmdb;\n\tfilmes: Filme[] = [];\n\taux: number;\n\n\tconstructor( private api: ApiConfigService) { }\n\t\n\t//GETS\n\tgetFilmes(): Observable<Filme[]> {\n\t\treturn of(FILMES);\n\t}\n\n\tgetFilmesByIds(idList: number[]): Observable<Filme[]> {\n\t\tthis.aux = 0;\n\t\tfor (let id of idList){\n\t\t\tthis.getFilme(id)\n\t\t\t\t.subscribe(filme => this.filmes[this.aux] = filme);\n\t\t\tif (this.filmes[this.aux] !== undefined)\n\t\t\t\tthis.aux++;\n\t\t}\n\t\treturn of(FILMES);\n\t}\n\n\tasync getFilmeIdApi(id: number): Promise<Filme>{\n\t\tawait new Promise<Filme>( async resolve => {\n\t\t\tawait this.api.searchById(id).then( async res => {\n\t\t\t\tthis.filmes[0] = <Filme> res;\n\t\t\t\tconsole.log('FILME BUCADO POR ID (FILME-SERVICE)');\n\t\t\t\tconsole.log(this.filmes[0]);\n\t\t\t});\n\t\t});\n\t\treturn this.filmes[0];\n\t}\n\n\t//\n\tgetFilme(id: number): Observable<Filme>{\n\t\treturn of(FILMES.find(filme => filme.id === id));\n\t}\n\t//*/\n\t\n\tasync getFilmesNomeApi(nome: string): Promise<Filme[]>{\n\t\tawait new Promise<Filme[]>( async resolve => {\n\t\t\tawait this.api.searchByName(nome).then(async (res) => {\n\t\t\t\tthis.response = res;\n\t\t\t\tthis.filmes = this.response.results;\n\t\t\t\t//console.log('A api retornou(FILME-SERVICE)');\n\t\t\t\t//console.log(this.filmes);\n\t\t\t\tresolve();\n\t\t\t}, err => {\n\t\t\t\tconsole.log(err);\n\t\t\t\tresolve();\n\t\t\t});\n\t\t\tresolve();\n\t\t});\n\t\t//console.log('PROMESSA FEITA (FILME-SERVICE)');\n\t\t//console.log(this.filmes);\n\t\treturn this.filmes;\n\t}\n\n}\n","import { Injectable } from '@angular/core';\n//Componentes necessarios\nimport { Conta } from '../base-data-types/conta'\n//Componentes de serviço\nimport { ContaService } from '../services/conta.service';\n//Componentes de rota\nimport { Router } from '@angular/router';\n//Componentes de autenticação\n//import { JwtHelperService } from '@auth0/angular-jwt';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\tconta: Conta;\n\n\tconstructor(\n\t\tprivate contaService: ContaService,\n\t\tprivate router: Router\n\t) { }\n\t\n\tlogar(email: string, senha: string): void{\n\t\tthis.conta = this.contaService.getContaByEmail(email);\n\t\t\n\t\tif (\n\t\t(this.conta !== undefined) && \n\t\t(this.conta.masterPerfil.senha === senha)\n\t\t){\n\t\t\tthis.conta.estaAutenticado = true;\n\t\t\tthis.contaService.ativarConta(this.conta.id);\n\t\t\tthis.router.navigate(['busca']);\n\t\t\t\n\t\t} else {\n\t\t\talert('Email ou senha incorretos!');\n\t\t}\n\t}\n\n\t/*/autenticacao\n  public isAuthenticated(): boolean {\n\t\tconst token = localStorage.getItem('token');\n\t\t\n    // Check whether the token is expired or not\n    return !this.jwtHelper.isTokenExpired(token);\n  }//*/\n\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n//Componentes necessarios\nimport { MasterPerfil } from '../base-data-types/perfil-dt/master-perfil';\n//Componentes de banco de dados\nimport { MASTERA } from '../mock-data/mock-masterPerfilA'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MasterPerfilService {\n\tMASTER: MasterPerfil[] = MASTERA;\n\tcurrId: number = 2;\n\n\tconstructor() { }\n\n\t//GETS\n\n\tgetPerfil(id: number): Observable<MasterPerfil> {\n\t\treturn of(this.MASTER.find(masterPerfil => masterPerfil.id === id));\n\t}\n\n\t//ADDS\n\n\tcreate(emailTx: string, senhaTx: string, contaId: number): MasterPerfil{\n\t\tconst master: MasterPerfil = {\n\t\t\tid: this.currId,\n\t\t\temail: emailTx,\n\t\t\tsenha: senhaTx,\n\t\t\tdtNascimento: '00/00/00',\n\t\t\tperfilBase: { id: 1, nome: \"Perfil principal\", lsFilmesAssistir: []},\n\t\t\tidConta: contaId\n\t\t};\n\t\tthis.MASTER.push(master);\n\n\t\tthis.currId++;\n\t\treturn master;\n\t}\n\t\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}